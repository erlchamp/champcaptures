name: Security (Snyk)

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write   # for SARIF upload
  pull-requests: write     # allows PR annotations

jobs:
  sca_iac_code:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node for Snyk CLI (optional, but common)
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Snyk CLI
        uses: snyk/actions/setup@0.4.0

      # --- SCA (Open Source) ---
      # For npm projects, Snyk can auto-detect manifest; if you need dev deps, add --dev
      - name: Snyk Open Source (SCA)
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          # Scan only the Node/NPM project to produce a single SARIF run (GitHub no longer accepts multiple runs per category)
          snyk test --severity-threshold=high --package-manager=npm --sarif-file-output=sca.sarif

      # --- SAST (Snyk Code) optional ---
      - name: Snyk Code (SAST) - optional
        if: ${{ false }}  # flip to true if you enable Snyk Code in org
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          snyk code test --severity-threshold=high --sarif-file-output=code.sarif

      # Upload SARIF (SCA + IaC + Code if enabled)
      - name: Upload SARIF - SCA
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: sca.sarif
          category: snyk-sca
      - name: Upload SARIF - IaC
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: iac.sarif
          category: snyk-iac
      - name: Upload SARIF - Code
        if: ${{ false }}  # flip to true if you enabled Snyk Code
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: code.sarif
          category: snyk-code

  container:
    runs-on: ubuntu-latest
    needs: sca_iac_code
    steps:
      - uses: actions/checkout@v4

      # Build the image locally WITHOUT pushing
      - name: Build image (local)
        uses: docker/build-push-action@v6
        with:
          context: .
          load: true
          tags: champoi/champcaptures:${{ github.sha }}
      
      - name: Install Snyk CLI
        uses: snyk/actions/setup@0.4.0

      # Scan the image; point to your Dockerfile to improve accuracy
      - name: Snyk Container
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          snyk container test champoi/champcaptures:${{ github.sha }} \
            --file=Dockerfile \
            --severity-threshold=high \
            --sarif-file-output=container.sarif

      - name: Upload SARIF - Container
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: container.sarif
          category: snyk-container