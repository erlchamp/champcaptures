name: Build & Push Docker Image

env:
  GCP_WIF_PROVIDER: ${{ secrets.GCP_WIF_PROVIDER }}
  GCP_SA_EMAIL: ${{ secrets.GCP_SA_EMAIL }}

on:
  workflow_run:
    workflows: ["Security (Snyk)"]
    types: [completed]
  # keep manual trigger for emergencies/overrides
  workflow_dispatch:

concurrency:
  group: docker-${{ github.ref }}
  cancel-in-progress: true

jobs:
  cdn_sync:
    # Run only if the security workflow succeeded OR this is a manual run
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read

    env:
      GCS_BUCKET: champoi-assets
      DEST_PREFIX: images   # => gs://champoi-assets/images/...

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # --- Auth to GCP (pick ONE automatically based on available secrets) ---
      - name: Auth with Workload Identity Federation
        if: ${{ env.GCP_WIF_PROVIDER != '' && env.GCP_SA_EMAIL != '' }}
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SA_EMAIL }}

      - name: Auth with Service Account JSON (fallback)
        if: ${{ env.GCP_WIF_PROVIDER == '' || env.GCP_SA_EMAIL == '' }}
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud (gsutil)
        uses: google-github-actions/setup-gcloud@v2

      - name: Sync assets/images to GCS
        run: |
          set -euo pipefail
          LOCAL_DIR="assets/images"
          GCS_URI="gs://${GCS_BUCKET}/${DEST_PREFIX}"
          if [ -d "${LOCAL_DIR}" ]; then
            gsutil -m rsync -r -d "${LOCAL_DIR}" "${GCS_URI}" || gsutil -m rsync -r -d "${LOCAL_DIR}" "${GCS_URI}"
          else
            echo "No ${LOCAL_DIR} directory; skipping sync."
          fi

      - name: Set long cache headers (immutable, 1 year)
        run: |
          set -euo pipefail
          GCS_URI="gs://${GCS_BUCKET}/${DEST_PREFIX}"
          gsutil -m setmeta \
            -h "Cache-Control:public, max-age=31536000, immutable" \
            "${GCS_URI}/**/*.jpg" "${GCS_URI}/**/*.jpeg" "${GCS_URI}/**/*.png" \
            "${GCS_URI}/**/*.webp" "${GCS_URI}/**/*.avif" "${GCS_URI}/**/*.gif" \
            "${GCS_URI}/**/*.svg" || true

  build_and_push:
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    needs: cdn_sync
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver: docker-container

      # Build the image locally (loads into Docker) so Snyk can scan THIS artifact
      - name: Build image (for scan)
        uses: docker/build-push-action@v6
        with:
          context: .
          load: true
          tags: champoi/champcaptures:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Install Snyk CLI
        uses: snyk/actions/setup@0.4.0

      - name: Snyk Container Scan
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          snyk container test champoi/champcaptures:${{ github.sha }} \
            --file=Dockerfile \
            --severity-threshold=high

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Push only after scan has passed
      - name: Build & Push image (on scan pass)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: champoi/champcaptures:latest,champoi/champcaptures:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false